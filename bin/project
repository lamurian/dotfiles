#!/bin/bash

# Create directories
createdir() {
    echo "Creting directories"
    mkdir -p \
        data/{raw,processed} \
        docs/_source \
        render \
        src/{R,python,sql,bash}
    touch \
        data/.gitignore \
        data/{raw,processed}/.gitignore \
        docs/.gitignore \
        docs/_source/.gitignore \
        src/.gitignore
    echo "Done!"
}

# Setting up `renv`
setrenv() {
    R --vanilla -q -e "renv::init()"
    R --vanilla -q -e "renv::settings\$snapshot.type('all')"
}

# Initialize git
setgit() {
    echo "Initializing git repository"
    git init
    wget https://raw.githubusercontent.com/lamurian/snippet/master/research/.gitignore -O .gitignore
    wget https://raw.githubusercontent.com/lamurian/snippet/master/research/LICENSE -O LICENSE
    wget https://raw.githubusercontent.com/lamurian/snippet/master/research/README.qmd -O README.qmd
    wget https://raw.githubusercontent.com/lamurian/snippet/master/research/data-README.md -O data/README.md
    wget https://raw.githubusercontent.com/lamurian/snippet/master/R/.Rprofile -O ->> .Rprofile
    git add --all
    git commit .gitignore -m "Initialize project repository"
    git commit renv.lock .Rprofile renv/activate.R renv/.gitignore -m "Track R packages with renv"
    git commit --all -m "Preserve the directory structure"
    echo "Done!"
}

# Run everything
init() {
    createdir && setrenv && setgit
}

# Call the project script
[ -z $1 ] && ARGS=$(init) || ARGS=$1
case $ARGS in
    createdir|dir|mkdir) createdir ;;
    setgit) setgit ;;
    renv) setrenv ;;
    init) init ;;
    *) echo "Command is not supported, please issue dir, git, renv, or init. Use init for first-time run.";;
esac
